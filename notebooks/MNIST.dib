#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"name":"csharp"},{"aliases":[],"languageName":"fsharp","name":"fsharp"}]}}

#!fsharp

#r "nuget: Plotly.NET"
#r "nuget: Plotly.NET.Interactive"
#r "nuget: FSharpPlus"

open Plotly.NET

#!fsharp

let xData = [ 0. .. 10. ]
let yData = [ 0. .. 10. ]
Chart.Point(xData, yData)

#!fsharp

// #r "../output/bin/Debug/net8.0/graia.dll" // to be used after `dotnet build` (dependencies included)
#load "../src/Graia.fs"
#load "../src/Tools.fs"

open Graia
open Tools

#!fsharp

let labels, images = loadMnist "datasets/mnist_train_head.csv"
printfn $"Images: {Seq.length images}"

#!fsharp

images
|> Array.take 5
|> Array.map (binarize 200)
|> Array.map (toSquareSvg 1)
|> Array.map (fun svg -> svg.DisplayAs("image/svg+xml"))
|> ignore
